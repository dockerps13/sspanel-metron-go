package config

import (
	"log"
	"sync"

	"github.com/spf13/viper"
	"gorm.io/driver/mysql"
	"gorm.io/gorm"
)

type ServerConfig struct {
	Port int
}

type DatabaseConfig struct {
	Dsn string
}

type JWTConfig struct {
	Secret string
}

type MetronConfig struct {
	ApiBaseURL string `mapstructure:"api_base_url"`
	ApiKey     string `mapstructure:"api_key"`
}

type Config struct {
	Server   ServerConfig
	Database DatabaseConfig
	JWT      JWTConfig
	Metron   MetronConfig
}

var (
	Conf Config
	DB   *gorm.DB
	once sync.Once
)

func InitConfig() error {
	viper.SetConfigName("config")
	viper.AddConfigPath("./config")
	err := viper.ReadInConfig()
	if err != nil {
		return err
	}

	err = viper.Unmarshal(&Conf)
	if err != nil {
		return err
	}
	return nil
}

func InitDB() error {
	var err error
	once.Do(func() {
		DB, err = gorm.Open(mysql.Open(Conf.Database.Dsn), &gorm.Config{})
		if err != nil {
			log.Println("数据库连接失败:", err)
		}
	})
	return err
}
